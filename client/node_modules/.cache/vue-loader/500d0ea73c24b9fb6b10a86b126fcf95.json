{"remainingRequest":"/home/passionary/Public/cmaker/client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/passionary/Public/cmaker/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/passionary/Public/cmaker/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/passionary/Public/cmaker/client/src/components/Book.vue?vue&type=template&id=4d934a99&scoped=true&","dependencies":[{"path":"/home/passionary/Public/cmaker/client/src/components/Book.vue","mtime":1592745907363},{"path":"/home/passionary/Public/cmaker/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/passionary/Public/cmaker/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/passionary/Public/cmaker/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/passionary/Public/cmaker/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}